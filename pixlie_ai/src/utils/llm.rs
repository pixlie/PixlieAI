use crate::engine::node::NodeItem;
use crate::engine::Engine;
use crate::error::PiResult;
use std::sync::Arc;
use ts_rs::TS;

const TS_FILE_HEADER: &str = "// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.";

pub fn clean_ts_type(s: &str) -> String {
    let s = s.replace(TS_FILE_HEADER, "").replace("export ", "");
    s.trim()
        .lines()
        .filter(|line| !line.starts_with("import"))
        .collect::<Vec<&str>>()
        .join("\n")
        .trim()
        .to_string()
}

pub trait LLMSchema: TS
where
    Self: 'static,
{
    fn get_schema_for_llm(_node: &NodeItem, _engine: Arc<&Engine>) -> PiResult<String> {
        Ok(clean_ts_type(&Self::export_to_string()?))
    }
}
