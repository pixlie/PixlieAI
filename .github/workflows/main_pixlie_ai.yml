on:
  push:
    branches: ["main", "ci/macos-builds"]
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  main_pixlie_ai:
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   artifact_name: pixlie
          #   asset_name: pixlie-linux-amd64
          - os: macos-latest
            artifact_name: pixlie
            asset_name: pixlie-macos-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up homebrew for MacOS
        if: matrix.os == 'macos-latest'
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: Setup necessary tools for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm rocksdb lld
          echo "export PATH=/opt/homebrew/opt/bin:$PATH" >> $GITHUB_ENV
          echo "export LIBCLANG_PATH=/opt/homebrew/opt/lib" >> $GITHUB_ENV
          echo "export DYLD_LIBRARY_PATH=/opt/homebrew/opt/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "export CC=/opt/homebrew/opt/bin/clang" >> $GITHUB_ENV
          echo "export CXX=/opt/homebrew/opt/bin/clang++" >> $GITHUB_ENV
          echo "export ROCKSDB_INCLUDE_DIR=/opt/homebrew/opt/include" >> $GITHUB_ENV
          echo "export ROCKSDB_LIB_DIR=/opt/homebrew/opt/lib" >> $GITHUB_ENV
          echo "export LD=/opt/homebrew/opt/lld/bin/ld64.lld" >> $GITHUB_ENV
          echo "export LDFLAGS=-fuse-ld=/opt/homebrew/opt/lld/bin/ld64.lld" >> $GITHUB_ENV
          echo "export AR=/opt/homebrew/opt/llvm/bin/llvm-ar" >> $GITHUB_ENV
          

      - name: Checkout
        uses: actions/checkout@v4

      - name: Test pixlie_ai
        working-directory: "./pixlie_ai"
        run: cargo test --verbose

      - name: Build release
        working-directory: "./pixlie_ai"
        run: cargo build --release
