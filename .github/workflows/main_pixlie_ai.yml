on:
  push:
    branches: ["main", "ci/macos-builds"]
    tags:
      - "v*"
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  main_pixlie_ai:
    name: Pixlie AI
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   artifact_name: pixlie
          #   asset_name: pixlie-linux-amd64
          - os: macos-15
            artifact_name: pixlie
            asset_name: pixlie-macos-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup necessary tools for MacOS
        if: matrix.os == 'macos-15'
        run: |
          brew install llvm rocksdb lld
          echo "export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/opt/llvm/lib" >> $GITHUB_ENV
          echo "export DYLD_LIBRARY_PATH=/opt/homebrew/opt/llvm/lib${DYLD_LIBRARY_PATH:+:$DYLD_LIBRARY_PATH}" >> $GITHUB_ENV
          echo "export PATH=/opt/homebrew/opt/llvm/bin:$PATH" >> $GITHUB_ENV
          echo "export LIBCLANG_PATH=/opt/homebrew/opt/llvm/lib" >> $GITHUB_ENV
          echo "export CC=/opt/homebrew/opt/llvm/bin/clang" >> $GITHUB_ENV
          echo "export CXX=/opt/homebrew/opt/llvm/bin/clang++" >> $GITHUB_ENV
          echo "export ROCKSDB_INCLUDE_DIR=/opt/homebrew/opt/rocksdb/include" >> $GITHUB_ENV
          echo "export ROCKSDB_LIB_DIR=/opt/homebrew/opt/rocksdb/lib" >> $GITHUB_ENV
          echo "export LD=/opt/homebrew/opt/lld/bin/ld64.lld" >> $GITHUB_ENV
          echo "export LDFLAGS=-fuse-ld=/opt/homebrew/opt/lld/bin/ld64.lld" >> $GITHUB_ENV
          echo "export AR=/opt/homebrew/opt/llvm/bin/llvm-ar" >> $GITHUB_ENV
          sudo mkdir -pv /usr/local/lib
          # TODO: For some reason, the libclang.dylib is not found by the linker.
          # So we create a symlink to the libclang.dylib in /usr/local/lib
          # This is a hack. There should be a better way to do this.
          sudo ln -s /opt/homebrew/opt/llvm/lib/libclang.dylib /usr/local/lib/libclang.dylib
          
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: |
            args: [--global, prettier]

      - name: Checkout
        uses: actions/checkout@v4

      - name: Test pixlie_ai
        run: |
          ./gen_ts_api_types.sh --verbose
          git diff admin/src --quiet || {
            echo "TypeScript API types outdated. Pls run ./gen_ts_api_types.sh & commit changes."
            exit 1
          }

      - name: Build release
        working-directory: "./pixlie_ai"
        run: cargo build --release

      - name: Upload binaries to release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pixlie_ai/target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
