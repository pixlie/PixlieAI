on:
  push:
    branches: ["main"]
    tags:
      - "v*"
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "pixlie_ai/**"
      - ".github/workflows/main_pixlie_ai.yml"

env:
  CARGO_TERM_COLOR: always

concurrency:
  # Avoid old jobs overlapping with new ones
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  main_pixlie_ai:
    name: Pixlie AI
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: cli
            asset_name: pixlie-linux-amd64
          - os: macos-latest
            artifact_name: cli
            asset_name: pixlie-macos-arm64
          - os: windows-latest
            artifact_name: cli
            asset_name: pixlie-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Pre-build installations for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libclang-dev

      - name: Pre-build installations for MacOS
        if: matrix.os == 'macos-latest'
        uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: 'llvm rocksdb lld'
          verbose: true

      - name: Pre-build installations for Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install llvm

      - name: Set environment variables for MacOS
        if: matrix.os == 'macos-latest'
        run: ./.ci/set-macos-env.sh
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}
          workspaces: "pixlie_ai -> target"

      - name: Test pixlie_ai
        working-directory: "./pixlie_ai"
        run: cargo test --verbose

      - name: Build release
        working-directory: "./pixlie_ai"
        run: cargo build --release

      - name: Upload binaries to release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pixlie_ai/target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
